$font-size-go-portrait: 60vw;
$font-size-go-landscape: 50vh;
$font-size-stop-portrait: 15vw;
$font-size-stop-landscape: 10vh;
$font-size-interval-portrait: 25vw;
$font-size-interval-landscape: 25vh;
$font-size-time-portrait: 25vw;
$font-size-time-landscape: 25vh;

.display-content {
/*   .fix {
    width: 100%;
    height: 100%;
  }
    .grid {
      width: 100%;
      width: -moz-available;
      width: -webkit-fill-available;
      height: 100%;
      height: -moz-available;
      height: -webkit-fill-available;
    } */

    .top-row, .bottom-row {
      align-items: baseline;
      justify-content: start;
      flex-wrap: nowrap;
    }
    .middle-row {
      @media screen and (orientation: portrait) {
        display: inherit;
      }
      @media screen and (orientation:landscape) {
        display: none;
      }
      align-items: center;
      justify-content: start;
      flex-wrap: nowrap;
    }

    .middle-col {
      align-self: flex-start;
    }
    .bottom-col {
      align-self: stretch
    }

    @media screen and (orientation: portrait) {
    font-size: $font-size-interval-portrait;
    }

    @media screen and (orientation:landscape) {
    font-size: $font-size-interval-landscape;
    } 

    .intervalColLandscape {
      @media screen and (orientation: portrait) {
        display: none;
      }
      @media screen and (orientation:landscape) {
        display: inherit;
      }
      justify-content: flex-end;
    }

    .intervalGo {
      @media screen and (orientation: portrait) {
        font-size: $font-size-interval-portrait;
      }
      @media screen and (orientation:landscape) {
        font-size: $font-size-interval-landscape;
      }
      color: var(--ion-color-success-shade)
    }
    .intervalGetReady,
    .intervalLoaded {
      @extend .intervalGo;
      color: var(--ion-color-success);
    }
    .intervalStop {
      @extend .intervalGo;
      color: var(--ion-color-danger);
    }
    .intervalCountdown {
      @extend .intervalGo;
      color: var(--ion-color-warning);
    }
    .intervalCompleted {
      @extend .intervalGo;
      color: var(--ion-color-primary);
    }
    
    #timeCol {
      display: inherit;
      justify-content: flex-end;
    }
    .timeGo {
      @media screen and (orientation: portrait) {
        font-size: $font-size-time-portrait;
      }
      @media screen and (orientation:landscape) {
        font-size: $font-size-time-landscape;
      }
      color: var(--ion-color-success);
    }
    .timeGetReady,
    .timeLoaded,
    .timeCountdown {
      @extend .timeGo;
      color: var(--ion-color-warning);
    }
    .timeStop {
      @extend .timeGo;
      color: var(--ion-color-danger);
    }
    .timeCompleted {
      @extend .timeGo;
      color: var(--ion-color-primary);
    }
}
